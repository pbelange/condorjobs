#----------------------
# VERSION: studyda:2024.0
#----------------------
# Compile the docker by running:
# sudo docker build -f images/build.studyda.2024.0 -t registry.cern.ch/study-da/studyda:2024.0 .
#----------------------
# Push to the registry
# sudo docker login registry.cern.ch
# sudo docker push registry.cern.ch/study-da/studyda:2024.0
#----------------------
# Source and run the docker image for test
# apptainer exec --bind /afs:/afs docker://registry.cern.ch/study-da/studyda:2024.0 bash
#=================================

FROM gitlab-registry.cern.ch/linuxsupport/alma9-base

LABEL author="philippe.belanger@cern.ch"

RUN dnf -y install curl which bzip2 libgfortran git file man-db make \
                   gcc gcc-gfortran python3-pip python3-devel wget vim locmap-release

RUN dnf -y install locmap

RUN locmap --enable kerberos
RUN locmap --enable afs
RUN locmap --enable eosclient
RUN locmap --enable cvmfs
RUN locmap --configure kerberos; exit 0
RUN locmap --configure afs; exit 0
RUN locmap --configure eosclient; exit 0
RUN locmap --configure cvmfs; exit 0

RUN dnf -y install eos-xrootd xrootd xrootd-client

WORKDIR /usr/local/studyda

RUN wget -O ./Miniforge3-latest.sh https://github.com/conda-forge/miniforge/releases/latest/download/Miniforge3-Linux-x86_64.sh
RUN bash Miniforge3-latest.sh -b -p /usr/local/studyda/miniforge3
RUN rm Miniforge3-latest.sh

RUN source /usr/local/studyda/miniforge3/bin/activate && conda init


# Set paths in order not to need to source .../bin/activate
#=========================================================
ENV PATH="/usr/local/studyda/miniforge3/bin"
ENV PATH="$PATH:/usr/local/studyda/miniforge3/condabin"
ENV PATH="$PATH:/root/.local/bin:/root/bin/usr/sue/sbin"
ENV PATH="$PATH:/usr/local/bin:/usr/sbin:/usr/bin:/sbin"
ENV PATH="$PATH:/opt/puppetlabs/bin"

ENV LD="/usr/local/studyda/miniforge3/bin/x86_64-conda-linux-gnu-ld"
ENV LDFLAGS="-Wl,-O2 -Wl,--sort-common -Wl,--as-needed -Wl,-z,relro -Wl,-z,now -Wl"
ENV LDFLAGS="$LDFLAGS,--disable-new-dtags -Wl,--gc-sections -Wl,--allow-shlib-undefined -Wl"
ENV LDFLAGS="$LDFLAGS,-rpath"
ENV LDFLAGS="$LDFLAGS,/usr/local/studyda/miniforge3/lib -Wl"
ENV LDFLAGS="$LDFLAGS,-rpath-link"
ENV LDFLAGS="$LDFLAGS,/usr/local/studyda/miniforge3/lib -L/usr/local/studyda/miniforge3/lib"
#==========================================================


# Update conda and compilers
#=======================================
RUN conda update -n base -c conda-forge conda
RUN conda install python=3.12
RUN conda install pip=24.0

RUN conda install gcc_linux-64=13.3.0 
RUN conda install gxx_linux-64=13.3.0
RUN conda install compilers=1.8.0 
RUN conda install cmake=3.26.4
#=======================================


# FOR GPU Calculations
#=======================================
RUN conda install mamba -n base -c conda-forge
RUN pip install cupy-cuda11x
RUN mamba install cudatoolkit=11.8.0
#=======================================

# Install generic python packages
#========================================
RUN pip install PyYAML==6.0.2
RUN pip install pyarrow==18.1.0
RUN pip install pandas==2.2.3
RUN pip install dask==2024.12.0
RUN pip install matplotlib==3.9.3
RUN pip install scipy==1.14.1
RUN pip install ipympl==0.9.4
RUN pip install ruamel.yaml==0.18.6
RUN pip install rich==13.9.4
#===========================================


# Install personnal projects
#===========================================
RUN pip install git+https://github.com/pbelange/nafflib.git@pybb.2024.2
RUN pip install git+https://github.com/pbelange/study-DA.git@bbcw.2024.0
#===========================================


# Install xsuite
#===========================================
RUN pip install xcoll==0.5.9
RUN pip install xdeps==0.7.4    
RUN pip install xfields==0.21.2   
RUN pip install xobjects==0.4.5   
RUN pip install xpart==0.19.1   
RUN pip install xtrack==0.69.7
# xmask ----
RUN git clone --recurse-submodules https://github.com/xsuite/xmask
RUN pip install -e xmask
#-----------
RUN pip install xsuite==0.18.10 --no-deps
RUN xsuite-prebuild regenerate
#===========================================



# Clean cache to reduce memory footprint as much as possible
#===========================================
RUN conda clean --force-pkgs-dirs
#===========================================
